from Crypto.Util.number import long_to_bytes
from math import prod

def decrypt_multi_prime_rsa(n, e, c, factors):
    phi = n
    for p in factors:
        phi = phi * (p - 1) // p

    d = pow(e, -1, phi)
    m = pow(c, d, n)

    message = long_to_bytes(m).decode('utf-8', errors='ignore')
    
    return message

n = 143083491525825465395877549467473122634019679394820033418099757350707258191502808359143919610647078402058348487201585204097941720923333042864838244321628278154525306037536939533838797625643113568209700653940303603375092841934059124207491516204815920725161692699143433279673788058963203942256320389700907411797047492080775661875595284348877381089430714723
e = 65537
c = 9609210962162893061534335791795275587220936821607246205042684717018980552998017758565260802711873007790438153048094088955271803911017057492341885661495504832298460764751634709312864915938915856512193399544709754766310589774099912688942014887175271643904537519227920026960839844492612377159234514100697999130983764995685573390896348502480667630183235251

factors = [
    4346796049, 4348393817, 4506181591, 4602175841, 4731310021, 4772742017,
    4831765711, 5051860841, 5057391617, 5537092811, 5637550223, 5984157203,
    6054473273, 6234173329, 6283435649, 6420203711, 6538322023, 6682909643,
    6787480169, 6882755017, 6975030971, 7218192889, 7218488971, 7444498231,
    7483582217, 7551923383, 7697637341, 7926848453, 8114203723, 8200187857,
    8249061647, 8311045807, 8478933539, 8514516979, 8557394801, 8577344777
]

calculated_n = prod(factors)

if n == calculated_n:
    result = decrypt_multi_prime_rsa(n, e, c, factors)
    print(f"Decrypted flag: {result}")
else:
    print("Error!")
    print(f"All multipliers from factordb!")