def iroot(x, n):
    high = 1
    while high ** n <= x:
        high *= 2
    low = high // 2
    while low < high:
        mid = (low + high) // 2
        if mid ** n < x:
            low = mid + 1
        else:
            high = mid
    return low

n = 165654458849679376349054880821927589310880475031322027955614835521990972424412564566246309145729903502750045436827652121150428450392216407336857498361473193032961338758956611977567681438237238061795633478294167106535082765689452502200850946343279693343596792452484350331852171279203728468109880908478152806341
e = 3
c = 333070251623914650556623234426971953880397340331721676684020823636972799225396381306140715586742419100874033649897259554303487887952888396517050120564123078662993846271400261849897054853623619767825700346011205761125

for k in range(1000000):
    m_candidate = c + k * n
    m = iroot(m_candidate, e)
    if m ** e == m_candidate:
        m_bytes = m.to_bytes((m.bit_length() + 7) // 8, 'big')
        if m_bytes.startswith(b'\x00'):
            m_bytes = m_bytes[1:]
        try:
            print(m_bytes.decode())
            break
        except:
            print(m_bytes.hex())
            break